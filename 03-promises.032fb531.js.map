{"mappings":"oeAQA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAW,IAAIC,SAErB,IAAIC,EAAW,EACXC,EAAS,EACTC,EAAQ,EACRC,EAAO,EAwCX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAGpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAG5BA,EAAM,G,CAjDbX,EAAKqB,iBAAiB,SAMe,SAAhBC,GACnB,MAAMC,EAAMD,EAAME,OAIlB,OADArB,EAASsB,IAAIF,EAAIG,KAAMH,EAAII,OACpBxB,C,IAVTH,EAAKqB,iBAAiB,UAce,SAAfC,GACpBA,EAAMM,iBACNtB,EAASuB,OAAO1B,EAAS2B,IAAI,WAC7BvB,EAAQsB,OAAO1B,EAAS2B,IAAI,UAC5BtB,EAAOqB,OAAO1B,EAAS2B,IAAI,SAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAQyB,GAAK,EAC/B1B,GAAY,EAEZI,EAAcJ,EAAUE,GACrByB,MAAK,EAAGb,SAAAc,EAAUb,MAAAc,MACjBpC,EAAAqC,OAAOC,QAAQ,qBAAqBH,QAAeC,MAAU,IAE9DG,OAAM,EAAGlB,SAAAmB,EAAUlB,MAAAmB,MAClBzC,EAAAqC,OAAOK,QAAQ,oBAAoBF,QAAeC,MAAU,IAEhEhC,GAASC,EAGX,YADAH,EAAW,E","sources":["src/js/03-promises.js"],"sourcesContent":["/*\nСтворюємо функцію, яка прикожному сабміті форми, створює завдану кількість промісів.\n\nПараметри та кількість промісів, завдається в відповідних полях форми.\n\nВикористовуємо бібліотеку Notiflix, для відображення спливаючих повідомлень, з інформацією про стан роботи створеного промісу.*/\n\n//Змінні\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst formData = new FormData();\n\nlet position = 0;\nlet amount = 0;\nlet delay = 0;\nlet step = 0;\n\nform.addEventListener('input', onFormInput);\nform.addEventListener('submit', onFormSubmit);\n\n// Функції\n\n//  Колбек-функція для отримання данних з форми\nfunction onFormInput(event) {\n  const evt = event.target;\n  //   console.log('evt.name :>> ', evt.name);\n  //   console.log('evt.value :>> ', evt.value);\n  formData.set(evt.name, evt.value);\n  return formData;\n}\n\n// Колбек-функція для виклику промісів в циклі\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  amount = Number(formData.get('amount'));\n  delay = Number(formData.get('delay'));\n  step = Number(formData.get('step'));\n\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  position = 0;\n  return;\n}\n\n// Функція-конструктор промісу\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$formData","FormData","$47d4ff9957288465$var$position","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$createPromise","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","addEventListener","event","evt","target","set","name","value","preventDefault","Number","get","i","then","position1","delay1","Notify","success","catch","position2","delay2","failure"],"version":3,"file":"03-promises.032fb531.js.map"}