{"mappings":"gfAQA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAW,IAAIC,SAEjBC,EAAW,EACXC,EAAS,EACTC,EAAQ,EACRC,EAAO,EAwCX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCC,YAAW,WACTJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,G,GAEnBA,GAEHG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,IA/CzBX,EAAKoB,iBAAiB,SAMe,SAAhBC,GACnB,IAAMC,EAAMD,EAAME,OAIlB,OADApB,EAASqB,IAAIF,EAAIG,KAAMH,EAAII,OACpBvB,C,IAVTH,EAAKoB,iBAAiB,UAce,SAAfC,GACpBA,EAAMM,iBACNrB,EAASsB,OAAOzB,EAAS0B,IAAI,WAC7BtB,EAAQqB,OAAOzB,EAAS0B,IAAI,UAC5BrB,EAAOoB,OAAOzB,EAAS0B,IAAI,SAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAQwB,GAAK,EAG/BrB,EAFAJ,GAAY,EAEYE,GACrBwB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARd,SAAUgB,EAAKF,EAALb,MACjBrB,EAAAqC,OAAOC,QAAQ,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE1DI,OAAM,SAAAN,G,IAAGO,EAAQP,EAARd,SAAUsB,EAAKR,EAALb,MAClBrB,EAAAqC,OAAOM,QAAQ,oBAAmCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,IAE5DjC,GAASC,EAGX,YADAH,EAAW,E","sources":["src/js/03-promises.js"],"sourcesContent":["/*\nСтворюємо функцію, яка прикожному сабміті форми, створює завдану кількість промісів.\n\nПараметри та кількість промісів, завдається в відповідних полях форми.\n\nВикористовуємо бібліотеку Notiflix, для відображення спливаючих повідомлень, з інформацією про стан роботи створеного промісу.*/\n\n//Змінні\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst formData = new FormData();\n\nlet position = 0;\nlet amount = 0;\nlet delay = 0;\nlet step = 0;\n\nform.addEventListener('input', onFormInput);\nform.addEventListener('submit', onFormSubmit);\n\n// Функції\n\n//  Колбек-функція для отримання данних з форми\nfunction onFormInput(event) {\n  const evt = event.target;\n  //   console.log('evt.name :>> ', evt.name);\n  //   console.log('evt.value :>> ', evt.value);\n  formData.set(evt.name, evt.value);\n  return formData;\n}\n\n// Колбек-функція для виклику промісів в циклі\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  amount = Number(formData.get('amount'));\n  delay = Number(formData.get('delay'));\n  step = Number(formData.get('step'));\n\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  position = 0;\n  return;\n}\n\n// Функція-конструктор промісу\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n        // Fulfill\n      }, delay);\n    } else {\n      reject({ position, delay });\n      // Reject\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$formData","FormData","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$createPromise","position3","delay3","Promise","resolve","reject","Math","random","setTimeout","position","delay","addEventListener","event","evt","target","set","name","value","preventDefault","Number","get","i","then","param","position1","delay1","Notify","success","concat","catch","position2","delay2","failure"],"version":3,"file":"03-promises.3025281f.js.map"}